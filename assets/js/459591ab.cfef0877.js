"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[7375],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>k});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=s(n),u=a,k=m["".concat(p,".").concat(u)]||m[u]||d[u]||o;return n?r.createElement(k,i(i({ref:t},c),{},{components:n})):r.createElement(k,i({ref:t},c))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[m]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},341:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:4},i="Development Environment",l={unversionedId:"system-architecture/development-environment",id:"system-architecture/development-environment",title:"Development Environment",description:"Software",source:"@site/docs/system-architecture/development-environment.md",sourceDirName:"system-architecture",slug:"/system-architecture/development-environment",permalink:"/project-smartspeech/docs/system-architecture/development-environment",draft:!1,editUrl:"https://github.com/Capstone-Projects-2023-Fall/project-smartspeech/edit/main/documentation/docs/system-architecture/development-environment.md",tags:[],version:"current",lastUpdatedBy:"Alexander Rajasekaran",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"docsSidebar",previous:{title:"Sequence Diagrams",permalink:"/project-smartspeech/docs/system-architecture/SequenceDiagrams"},next:{title:"Version Control",permalink:"/project-smartspeech/docs/system-architecture/version-control"}},p={},s=[{value:"Software",id:"software",level:2},{value:"Technologies",id:"technologies",level:3},{value:"Development",id:"development",level:4},{value:"Testing",id:"testing",level:4},{value:"Deployment on AWS",id:"deployment-on-aws",level:4},{value:"Hardware",id:"hardware",level:2}],c={toc:s};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"development-environment"},"Development Environment"),(0,a.kt)("h2",{id:"software"},"Software"),(0,a.kt)("h3",{id:"technologies"},"Technologies"),(0,a.kt)("h4",{id:"development"},"Development"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Text Editor / IDE : any, prefer: ",(0,a.kt)("inlineCode",{parentName:"li"},"VSCode"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Development can be done with any tool including simple text editors like ",(0,a.kt)("inlineCode",{parentName:"li"},"vim"),"/",(0,a.kt)("inlineCode",{parentName:"li"},"notepad"),". ",(0,a.kt)("em",{parentName:"li"},"However"),", the current repository follows formatting rules defined by Typescript/TSX mode on ",(0,a.kt)("a",{parentName:"li",href:"https://prettier.io/"},"prettier")," which is why a highly configurable text editor is preferred like ",(0,a.kt)("inlineCode",{parentName:"li"},"VSCode")))),(0,a.kt)("li",{parentName:"ul"},"JavaScript Package Manager: ",(0,a.kt)("inlineCode",{parentName:"li"},"npm"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("inlineCode",{parentName:"li"},"npm")," or ",(0,a.kt)("inlineCode",{parentName:"li"},"node package manager")," is used to handle the organization of external tooling and packages. It allows us to see which modules are used as defined in the ",(0,a.kt)("inlineCode",{parentName:"li"},"package.json/package-lock.json")))),(0,a.kt)("li",{parentName:"ul"},"Python Package Manager: ",(0,a.kt)("inlineCode",{parentName:"li"},"pip"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"pip")," is used to manage all backend technologies.")))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Frameworks and Langauges"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"JavaScript / TypeScript"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"NextJs 13: ReactJs Wrapper with Server Rendering with API routes"),(0,a.kt)("li",{parentName:"ul"},"Jest: Testing for React Components used in NextJs pages"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Python"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"FastAPI: Backend framework with a modern Python runtime")))),(0,a.kt)("h4",{id:"testing"},"Testing"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"React Component Testing: ",(0,a.kt)("inlineCode",{parentName:"li"},"jest"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"React Component Testing is done via ",(0,a.kt)("inlineCode",{parentName:"li"},"jest")," since it is easy to integrate within the frontend workflow. Tests can be ran with ",(0,a.kt)("inlineCode",{parentName:"li"},"npm run test"),". The ",(0,a.kt)("inlineCode",{parentName:"li"},"test")," command is alias to run a ",(0,a.kt)("inlineCode",{parentName:"li"},"jest")," coverage report on each tested component.")))),(0,a.kt)("h4",{id:"deployment-on-aws"},"Deployment on AWS"),(0,a.kt)("p",null,"Currently",(0,a.kt)("sup",{parentName:"p",id:"fnref-1"},(0,a.kt)("a",{parentName:"sup",href:"#fn-1",className:"footnote-ref"},"1")),", the backend for this application will be hosted on AWS EC2 Virtual Machines as defined by the Terraform (Infrastructure as Code) layout."),(0,a.kt)("h2",{id:"hardware"},"Hardware"),(0,a.kt)("p",null,"There is no hardware used in this project."),(0,a.kt)("div",{className:"footnotes"},(0,a.kt)("hr",{parentName:"div"}),(0,a.kt)("ol",{parentName:"div"},(0,a.kt)("li",{parentName:"ol",id:"fn-1"},"The plan is to move to a containerized backend to easily trigger CI/CD updates. The current Terraform layout (EC2 VMs) is borrowed from a previous project.",(0,a.kt)("a",{parentName:"li",href:"#fnref-1",className:"footnote-backref"},"\u21a9")))))}m.isMDXComponent=!0}}]);